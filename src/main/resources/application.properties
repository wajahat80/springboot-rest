# A good example to implement other database
# https://www.mkyong.com/spring-boot/spring-boot-spring-data-jpa-oracle-example/

# MySQL settings
mysql.connection.username=admin
mysql.connection.password=admin
#mysql.current_session_context_class=thread
mysql.hbm2ddl.auto=validate
mysql.show_sql=false
mysql.format_sql=false
mysql.connection.url=jdbc:mysql://localhost:3306/demodb
mysql.connection.driver_class=com.mysql.jdbc.Driver
mysql.dialect=org.hibernate.dialect.MySQLDialect

# Oracle settings
#oracle.connection.url=jdbc:oracle:thin:@localhost:1521:xe
#oracle.connection.driver_class=oracle.jdbc.driver.OracleDriver

# PostgresSql
#postgres.connection.url=jdbc:postgresql://localhost:5432/app
#postgres.connection.driver_class=org.postgresql.Driver
#postgres.dialect=org.hibernate.dialect.PostgreSQLDialect


#spring.main.banner-mode=off

# create and drop tables and sequences, loads import.sql
#spring.jpa.hibernate.ddl-auto=create-drop



# HikariCP settings
#spring.datasource.hikari.*

#spring.datasource.hikari.connection-timeout=60000
#spring.datasource.hikari.maximum-pool-size=5

# logging
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
#logging.level.org.hibernate.SQL=debug
#logging.level.org.hibernate.type.descriptor.sql=trace
#logging.level.=error

